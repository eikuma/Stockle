name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: stockle_test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h"127.0.0.1" -P3306 -utest -ptest --silent; do
          echo 'waiting for mysql...'
          sleep 1
        done

    - name: Install dependencies
      working-directory: ./backend
      run: go mod download

    - name: Run tests with coverage
      working-directory: ./backend
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: test
        DB_PASSWORD: test
        DB_NAME: stockle_test
        JWT_SECRET: test-secret
        ENV: test
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.out
        flags: backend
        name: backend-coverage

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        working-directory: ./backend
        args: --timeout=5m

    - name: Security scan
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif ./backend/...'
      continue-on-error: true

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: gosec.sarif

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build
      working-directory: ./backend
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o api ./cmd/api
        
    - name: Test build
      working-directory: ./backend
      run: |
        ./api --help || echo "Binary created successfully"