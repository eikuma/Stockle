openapi: 3.0.3
info:
  title: Stockle API
  description: 記事保存アプリケーションのAPI仕様
  version: 1.0.0
  contact:
    name: Stockle Team
servers:
  - url: http://localhost:8080/api/v1
    description: 開発環境
  - url: https://api.stockle.app/v1
    description: 本番環境

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        display_name:
          type: string
        profile_image_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time

    Article:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        url:
          type: string
          format: uri
        summary:
          type: string
        thumbnail_url:
          type: string
          format: uri
        status:
          type: string
          enum: [unread, read, archived]
        saved_at:
          type: string
          format: date-time
        category:
          $ref: '#/components/schemas/Category'

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        color:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'

    Summary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        article_id:
          type: string
          format: uuid
        content:
          type: string
        generated_at:
          type: string
          format: date-time
        provider:
          type: string
          enum: [groq, anthropic]

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        status_code:
          type: integer

paths:
  /auth/register:
    post:
      summary: ユーザー登録
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                display_name:
                  type: string
              required: [email, password, display_name]
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 既存ユーザー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: ユーザーログイン
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: 認証失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      summary: トークンリフレッシュ
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required: [refresh_token]
      responses:
        '200':
          description: リフレッシュ成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string

  /auth/logout:
    post:
      summary: ログアウト
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: ログアウト成功

  /auth/google:
    post:
      summary: Google OAuth認証
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required: [token]
      responses:
        '200':
          description: 認証成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
                  user:
                    $ref: '#/components/schemas/User'

  /articles:
    get:
      summary: 記事一覧取得
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [unread, read, archived]
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 記事一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer

    post:
      summary: 記事保存
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                category_id:
                  type: string
                  format: uuid
                tags:
                  type: array
                  items:
                    type: string
              required: [url]
      responses:
        '201':
          description: 記事保存成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '409':
          description: 重複URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /articles/{id}:
    get:
      summary: 記事詳細取得
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 記事詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: 記事なし
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: 記事更新
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [unread, read, archived]
                category_id:
                  type: string
                  format: uuid
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

    delete:
      summary: 記事削除
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 削除成功
        '404':
          description: 記事なし

  /articles/{id}/summary:
    get:
      summary: 要約取得
      tags:
        - Summaries
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 要約
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
        '404':
          description: 要約なし

    post:
      summary: 要約生成
      tags:
        - Summaries
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: 生成開始
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [pending, processing]

  /categories:
    get:
      summary: カテゴリ一覧取得
      tags:
        - Categories
      security:
        - BearerAuth: []
      responses:
        '200':
          description: カテゴリ一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      summary: カテゴリ作成
      tags:
        - Categories
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
                  pattern: '^#[0-9A-Fa-f]{6}$'
              required: [name, color]
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /users/me:
    get:
      summary: 自分のユーザー情報取得
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: ユーザー情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      summary: プロフィール更新
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                profile_image_url:
                  type: string
                  format: uri
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /health:
    get:
      summary: ヘルスチェック
      tags:
        - System
      responses:
        '200':
          description: サービス正常
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time