run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_mock\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true

linters-settings:
  # エラーチェック
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  # 循環的複雑度
  gocyclo:
    min-complexity: 15

  # 関数の長さ
  funlen:
    lines: 80
    statements: 50

  # ファイルの長さ
  lll:
    line-length: 120

  # 変数名の最小長
  varnamelen:
    min-name-length: 2
    ignore-names:
      - err
      - id
      - db
      - tx
      - ok
      - i
      - j
      - k

  # import順序
  goimports:
    local-prefixes: github.com/private/Stockle

  # govet設定
  govet:
    enable-all: true
    disable:
      - fieldalignment # メモリ効率より可読性を優先

  # 未使用パラメータ
  unparam:
    check-exported: false

  # 名前付け規則
  revive:
    rules:
      - name: exported
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"

  # セキュリティ
  gosec:
    excludes:
      - G104 # Audit errors not checked - errcheckで検出
    config:
      G101: # パスワードハードコーディング検出
        pattern: "(?i)passwd|pass|password|pwd|secret|token|key"
        ignore_entropy: false
        entropy_threshold: "80.0"
        per_char_threshold: "3.0"
        truncate: "32"

linters:
  enable:
    # 基本的なlinter
    - errcheck      # エラーハンドリング
    - gosimple      # コード簡素化
    - govet         # Go標準のvet
    - ineffassign   # 無効な代入
    - staticcheck   # 静的解析
    - typecheck     # 型チェック
    - unused        # 未使用コード
    
    # コード品質
    - gocyclo       # 循環的複雑度
    - funlen        # 関数長
    - lll           # 行長
    - varnamelen    # 変数名長
    - nestif        # ネストの深さ
    
    # スタイル
    - gofmt         # フォーマット
    - goimports     # import順序
    - revive        # 命名規則等
    
    # パフォーマンス
    - prealloc      # スライス事前割り当て
    - unparam       # 未使用パラメータ
    
    # セキュリティ
    - gosec         # セキュリティ問題

  disable:
    - deadcode      # deprecated: unusedに統合
    - varcheck      # deprecated: unusedに統合
    - structcheck   # deprecated: unusedに統合
    - scopelint     # deprecated: exportlooprefに統合
    - golint        # deprecated: reviveを使用
    - interfacer    # deprecated: 誤検出が多い
    - maligned      # deprecated: govetのfieldalignmentを使用

issues:
  # 除外するファイルパターン
  exclude-rules:
    # テストファイルでは一部のlinterを無効化
    - path: _test\.go
      linters:
        - funlen
        - gocyclo
        - lll
        - varnamelen
    
    # mainファイルでは関数長制限を緩和
    - path: cmd/
      linters:
        - funlen

    # 自動生成ファイルは除外
    - path: ".*\\.gen\\.go$"
      linters:
        - all

  # デフォルト除外を無効化（すべてのissueを表示）
  exclude-use-default: false

  # 最大issue数
  max-issues-per-linter: 0
  max-same-issues: 0